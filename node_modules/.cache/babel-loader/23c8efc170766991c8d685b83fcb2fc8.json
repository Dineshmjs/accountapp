{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/Desktop/Account/src/component/ViewDebit.js\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nfunction ViewDebit(props) {\n  const offline = \"http://localhost:2000\"; //const online = \"https://accountnote.herokuapp.com\"\n\n  const {\n    data,\n    reload,\n    credit\n  } = props;\n  console.log(reload, data);\n  const [getData, setgetData] = useState([]);\n  useEffect(() => {\n    Axios.get(offline + \"/debit\", {\n      params: {\n        credit: credit\n      }\n    }).then(res => {\n      console.log(res.data);\n      setgetData(res.data.debit);\n    });\n  }, [reload]);\n\n  if (getData) {\n    var x;\n\n    for (x of getData.debit) {\n      var totalDebit = totalDebit + x.amount;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, getData.map((debit, index) => {\n    totalDebit = totalDebit + debit.amount;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, debit.reason), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, debit.amount));\n  }), totalDebit);\n}\n\nexport default ViewDebit;","map":{"version":3,"sources":["/home/dinesh/Desktop/Account/src/component/ViewDebit.js"],"names":["React","useState","useEffect","Axios","ViewDebit","props","offline","data","reload","credit","console","log","getData","setgetData","get","params","then","res","debit","x","totalDebit","amount","map","index","reason"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAMC,OAAO,GAAG,uBAAhB,CAFsB,CAGtB;;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA2BJ,KAAjC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBD,IAApB;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACW,GAAN,CAAUR,OAAO,GAAG,QAApB,EAA8B;AAAES,MAAAA,MAAM,EAAE;AAAEN,QAAAA,MAAM,EAAEA;AAAV;AAAV,KAA9B,EACKO,IADL,CACUC,GAAG,IAAI;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACV,IAAhB;AACAM,MAAAA,UAAU,CAACI,GAAG,CAACV,IAAJ,CAASW,KAAV,CAAV;AACH,KAJL;AAMH,GAPQ,EAON,CAACV,MAAD,CAPM,CAAT;;AAQA,MAAGI,OAAH,EAAW;AACP,QAAIO,CAAJ;;AACA,SAAIA,CAAJ,IAASP,OAAO,CAACM,KAAjB,EAAuB;AACnB,UAAIE,UAAU,GAAGA,UAAU,GAAGD,CAAC,CAACE,MAAhC;AACH;AACJ;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,OAAO,CAACU,GAAR,CAAY,CAACJ,KAAD,EAAQK,KAAR,KAAkB;AAC1BH,IAAAA,UAAU,GAAGA,UAAU,GAAGF,KAAK,CAACG,MAAhC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBL,KAAK,CAACM,MAA9B,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCN,KAAK,CAACG,MAA1C,CAFJ,CADJ;AAMH,GARD,CAFR,EAYKD,UAZL,CADJ;AAgBH;;AAED,eAAehB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\n\nfunction ViewDebit(props) {\n\n    const offline = \"http://localhost:2000\"\n    //const online = \"https://accountnote.herokuapp.com\"\n\n    const { data, reload, credit } = props\n    console.log(reload, data)\n\n    const [getData, setgetData] = useState([])\n\n    useEffect(() => {\n        Axios.get(offline + \"/debit\", { params: { credit: credit } })\n            .then(res => {\n                console.log(res.data)\n                setgetData(res.data.debit)\n            })\n\n    }, [reload])\n    if(getData){\n        var x;\n        for(x of getData.debit){\n            var totalDebit = totalDebit + x.amount\n        }\n    }\n    return (\n        <div>\n            {\n                getData.map((debit, index) => {\n                    totalDebit = totalDebit + debit.amount\n                    return (\n                        <div className=\"row\" key={index}>\n                            <div className=\"col-6\">{debit.reason}</div>\n                            <div className=\"col-6 text-danger\">{debit.amount}</div>\n                        </div>\n                    )\n                })\n            }\n            {totalDebit}\n        </div>\n    )\n}\n\nexport default ViewDebit\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/Desktop/Account/src/component/credit/Credit.js\";\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport ViewCredit from './ViewCredit';\nimport { useDispatch } from 'react-redux';\nimport { CreditAction } from '../../redux/Action';\nimport { http } from '../../axios';\n\nfunction Credit() {\n  const dispatch = useDispatch();\n  const [click, setClick] = useState(1);\n  const [data, setData] = useState([]);\n  console.log(\"click\", click);\n  const initialValues = {\n    reason: \"\",\n    name: \"\",\n    amount: \"\"\n  };\n\n  const submit = (values, props) => {\n    console.log(values);\n    setClick(click + 1);\n    http.post(\"credit\", values).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    http.get(\"credit\").then(res => {\n      console.log(res.data);\n      setData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    props.resetForm();\n  };\n\n  const validattionSchema = yup.object({\n    reason: yup.string().required(\"Required reason\"),\n    name: yup.string().required(\"Required\"),\n    amount: yup.string().required(\"Required\")\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: submit,\n    validationSchema: validattionSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"reason\",\n    className: \"form-control mt-3\",\n    placeholder: \"Enter Purpose of The Amount \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"reason\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"number\",\n    name: \"amount\",\n    className: \"form-control mt-3\",\n    placeholder: \"Enter Amount To Credite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control mt-3\",\n    placeholder: \"Enter your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn w3-brown mt-3\",\n    onClick: () => dispatch(CreditAction(data)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(ViewCredit, {\n    click: click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Credit;","map":{"version":3,"sources":["/home/dinesh/Desktop/Account/src/component/credit/Credit.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","yup","ViewCredit","useDispatch","CreditAction","http","Credit","dispatch","click","setClick","data","setData","console","log","initialValues","reason","name","amount","submit","values","props","post","then","res","catch","err","get","resetForm","validattionSchema","object","string","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup'\nimport ViewCredit from './ViewCredit';\nimport { useDispatch } from 'react-redux';\nimport { CreditAction } from '../../redux/Action'\nimport {http} from '../../axios'\n\nfunction Credit() {\n    \n\n    const dispatch = useDispatch()\n\n\n    const [click, setClick] = useState(1)\n    const [data, setData] = useState([])\n\n    console.log(\"click\", click)\n\n\n    const initialValues = {\n        reason: \"\",\n        name: \"\",\n        amount: \"\"\n    }\n\n    const submit = (values, props) => {\n        console.log(values)\n        setClick(click + 1)\n\n        http.post(\"credit\", values)\n            .then((res) => {\n                console.log(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        http.get(\"credit\")\n            .then(res => {\n                console.log(res.data)\n                setData(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        props.resetForm()\n\n    }\n\n    const validattionSchema = yup.object({\n        reason: yup.string().required(\"Required reason\"),\n        name: yup.string().required(\"Required\"),\n        amount: yup.string().required(\"Required\")\n\n    })\n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={submit}\n                validationSchema={validattionSchema}\n            >\n                <Form>\n                    <div>\n                        <Field type=\"text\" name=\"reason\" className=\"form-control mt-3\" placeholder=\"Enter Purpose of The Amount \" />\n                        <ErrorMessage name=\"reason\" />\n                    </div>\n                    <div>\n                        <Field type=\"number\" name=\"amount\" className=\"form-control mt-3\" placeholder=\"Enter Amount To Credite\" />\n                        <ErrorMessage name=\"amount\" />\n                    </div>\n                    <div>\n                        <Field type=\"text\" name=\"name\" className=\"form-control mt-3\" placeholder=\"Enter your name\" />\n                        <ErrorMessage name=\"name\" />\n                    </div>\n                    <div className=\"w3-center\">\n                        <button type=\"submit\" className=\"btn w3-brown mt-3\" onClick={() => dispatch(CreditAction(data))}>Submit</button>\n                    </div>\n                </Form>\n\n            </Formik>\n\n            <ViewCredit click={click} />\n        </div>\n    )\n}\n\nexport default Credit\n"]},"metadata":{},"sourceType":"module"}
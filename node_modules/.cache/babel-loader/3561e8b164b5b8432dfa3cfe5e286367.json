{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/Desktop/Account/src/component/NewDebit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n\nfunction NewDebit() {\n  const [amount, setAmount] = useState();\n  const [formData, setformData] = useState();\n  const [credit, setCredit] = useState([]);\n  useEffect(() => {\n    if (formData) {\n      Axios.post(\"http://localhsot:2000/debit\", formData).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      setTimeout(get, 1000);\n    }\n  });\n  useEffect(() => {\n    Axios.get(\"http://localhost:2000/credit\").then(res => {\n      console.log(res.data);\n      setCredit(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const get = () => {\n    Axios.get(\"http://localhost:2000/debit\").then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const initialValue = {\n    credit: \"\",\n    reason: \"\",\n    amount: \"\"\n  };\n\n  const submit = (values, props) => {\n    console.log(values);\n    setformData(values);\n    props.resetForm();\n  };\n\n  const validationSchema = yup.object({\n    select: yup.string().required(\"Plese Select Reason\"),\n    reason: yup.string().required(\"Reason Required\"),\n    amount: yup.string().required(\"Amount Required\")\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValue,\n    onSubmit: submit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"credit\",\n    className: \"form-control mt-2\",\n    placeholder: \"Enter Reason for Debit\",\n    onClick: e => setAmount(e.target.amount) //value={reason}                                                                               \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    amount: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Select From\"), credit.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: option.reason,\n    amount: option.amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, option.reason))), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"credit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"available\",\n    className: \"form-control mt-2\",\n    value: amount,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"reason\",\n    className: \"form-control mt-2\",\n    placeholder: \"Enter Reason for Debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"reason\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"number\",\n    name: \"amount\",\n    className: \"form-control mt-2\",\n    placeholder: \"Enter amount to Debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn w3-red mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Debit\")))));\n}\n\nexport default NewDebit;","map":{"version":3,"sources":["/home/dinesh/Desktop/Account/src/component/NewDebit.js"],"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","yup","Axios","NewDebit","amount","setAmount","formData","setformData","credit","setCredit","post","then","res","console","log","data","catch","err","setTimeout","get","initialValue","reason","submit","values","props","resetForm","validationSchema","object","select","string","required","e","target","map","option","index"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n\nfunction NewDebit() {\n    const [amount, setAmount] = useState()\n    const [formData, setformData] = useState()\n    const [credit,setCredit] = useState([])\n\n    useEffect(() => {      \n      if(formData){\n          Axios.post(\"http://localhsot:2000/debit\",formData)\n          .then(res=>{\n              console.log(res.data)\n          })\n          .catch(err=>{\n              console.log(err)\n          })\n\n          setTimeout(get,1000)\n      }\n    })\n\n    useEffect(() => {      \n        Axios.get(\"http://localhost:2000/credit\")\n        .then(res=>{\n            console.log(res.data) \n            setCredit(res.data)           \n        })\n        .catch(err=>{\n            console.log(err)\n        })\n      },[])\n\n      \n\n    const get=()=>{\n        Axios.get(\"http://localhost:2000/debit\")\n        .then(res=>{\n            console.log(res.data)\n\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    \n\n    const initialValue = {\n        credit: \"\",\n        reason: \"\",\n        amount: \"\"\n    }\n    const submit = (values,props) => {\n        console.log(values)\n\n        setformData(values)\n        props.resetForm()\n\n    }\n    const validationSchema = yup.object({\n        select: yup.string().required(\"Plese Select Reason\"),\n        reason: yup.string().required(\"Reason Required\"),\n        amount: yup.string().required(\"Amount Required\")\n    })\n\n    \n\n    return (\n        <div className=\"mt-3\">\n            <Formik\n                initialValues={initialValue}\n                onSubmit={submit}\n                validationSchema={validationSchema}\n            >\n                <Form>\n                    <div>\n                        <Field\n                            as=\"select\"\n                            name=\"credit\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter Reason for Debit\"\n                            onClick={(e) => setAmount(e.target.amount)}\n                        //value={reason}                                                                               \n                        >\n                            <option value=\"\" amount=\"\">Select From</option>\n                            {\n                                credit.map((option, index) => (\n                                    <option key={index} value={option.reason} amount={option.amount} >{option.reason}</option>\n                                ))\n                            }\n                        </Field>\n                        <ErrorMessage name=\"credit\" />\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"text\"\n                            name=\"available\"\n                            className=\"form-control mt-2\"\n                            value={amount}\n                            disabled\n                        />\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"text\"\n                            name=\"reason\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter Reason for Debit\"\n                        />\n                        <ErrorMessage name=\"reason\" />\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"number\"\n                            name=\"amount\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter amount to Debit\"\n                        />\n                        <ErrorMessage name=\"amount\" />\n                    </div>\n                    <div className=\"w3-center\">\n                        <button type=\"submit\" className=\"btn w3-red mt-2\" >Debit</button>\n                    </div>\n                </Form>\n\n            </Formik>\n        </div>\n    )\n}\n\nexport default NewDebit\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/Desktop/Account/src/component/NewDebit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n\nfunction NewDebit(props) {\n  const [amount, setAmount] = useState();\n  const [reason, setReason] = useState();\n  const [formData, setformData] = useState();\n  const [credit, setCredit] = useState([]);\n  console.log(formData);\n  const offline = \"http://localhost:2000\"; //const online = \"https://accountnote.herokuapp.com\"\n\n  useEffect(() => {\n    if (formData) {\n      Axios.post(offline + \"/debit\", formData).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      setTimeout(get, 1000);\n    }\n  }, [formData]);\n  useEffect(() => {\n    Axios.get(offline + \"/credit\").then(res => {\n      console.log(\"creditReason\", res.data);\n      setCredit(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    if (reason) {\n      Axios.get(offline + \"/credit/amount\", {\n        params: {\n          reason: reason\n        }\n      }).then(res => {\n        setAmount(res.data.availableAmount);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [reason]);\n\n  const get = () => {\n    Axios.get(offline + \"/debit\").then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const initialValue = {\n    credit: \"\",\n    reason: \"\",\n    amount: \"\"\n  };\n\n  const submit = (values, props) => {\n    setformData(values); //props.resetForm()        \n  };\n\n  const validationSchema = yup.object({\n    // credit: yup.string().required(\"Plese Select Reason\"),\n    reason: yup.string().required(\"Reason Required\"),\n    amount: yup.string().required(\"Amount Required\")\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    id: \"newDebit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValue,\n    onSubmit: submit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, props.credit)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"available\",\n    className: \"form-control mt-2\",\n    value: `available Amount ${amount}`,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"reason\",\n    className: \"form-control mt-2\",\n    placeholder: \"Enter Reason for Debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"reason\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"number\",\n    name: \"amount\",\n    className: \"form-control mt-2\",\n    placeholder: \"Enter amount to Debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn w3-red mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Debit\")))));\n}\n\nexport default NewDebit;","map":{"version":3,"sources":["/home/dinesh/Desktop/Account/src/component/NewDebit.js"],"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","yup","Axios","NewDebit","props","amount","setAmount","reason","setReason","formData","setformData","credit","setCredit","console","log","offline","post","then","res","data","catch","err","setTimeout","get","params","availableAmount","initialValue","submit","values","validationSchema","object","string","required"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,EAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMM,OAAO,GAAG,uBAAhB,CARqB,CASrB;;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,QAAJ,EAAc;AACVP,MAAAA,KAAK,CAACc,IAAN,CAAWD,OAAO,GAAC,QAAnB,EAA6BN,QAA7B,EACKQ,IADL,CACUC,GAAG,IAAI;AACTL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB;AACH,OAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OANL;AAQAC,MAAAA,UAAU,CAACC,GAAD,EAAM,IAAN,CAAV;AACH;AACJ,GAZQ,EAYP,CAACd,QAAD,CAZO,CAAT;AAcAb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACqB,GAAN,CAAUR,OAAO,GAAC,SAAlB,EACKE,IADL,CACUC,GAAG,IAAI;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BI,GAAG,CAACC,IAA/B;AACAP,MAAAA,SAAS,CAACM,GAAG,CAACC,IAAL,CAAT;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT;AAWAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,MAAJ,EAAY;AACRL,MAAAA,KAAK,CAACqB,GAAN,CAAUR,OAAO,GAAC,gBAAlB,EAAoC;AAAES,QAAAA,MAAM,EAAE;AAAEjB,UAAAA,MAAM,EAAEA;AAAV;AAAV,OAApC,EACKU,IADL,CACUC,GAAG,IAAI;AACTZ,QAAAA,SAAS,CAACY,GAAG,CAACC,IAAJ,CAASM,eAAV,CAAT;AACH,OAHL,EAIKL,KAJL,CAIWC,GAAG,IAAI;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OANL;AAOH;AAEJ,GAXQ,EAWN,CAACd,MAAD,CAXM,CAAT;;AAeA,QAAMgB,GAAG,GAAG,MAAM;AACdrB,IAAAA,KAAK,CAACqB,GAAN,CAAUR,OAAO,GAAC,QAAlB,EACKE,IADL,CACUC,GAAG,IAAI;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB;AAEH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAPL;AAQH,GATD;;AAaA,QAAMK,YAAY,GAAG;AACjBf,IAAAA,MAAM,EAAE,EADS;AAEjBJ,IAAAA,MAAM,EAAE,EAFS;AAGjBF,IAAAA,MAAM,EAAE;AAHS,GAArB;;AAKA,QAAMsB,MAAM,GAAG,CAACC,MAAD,EAASxB,KAAT,KAAmB;AAC9BM,IAAAA,WAAW,CAACkB,MAAD,CAAX,CAD8B,CAE9B;AAEH,GAJD;;AAKA,QAAMC,gBAAgB,GAAG5B,GAAG,CAAC6B,MAAJ,CAAW;AAChC;AACAvB,IAAAA,MAAM,EAAEN,GAAG,CAAC8B,MAAJ,GAAaC,QAAb,CAAsB,iBAAtB,CAFwB;AAGhC3B,IAAAA,MAAM,EAAEJ,GAAG,CAAC8B,MAAJ,GAAaC,QAAb,CAAsB,iBAAtB;AAHwB,GAAX,CAAzB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEN,YADnB;AAEI,IAAA,QAAQ,EAAEC,MAFd;AAGI,IAAA,gBAAgB,EAAEE,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQzB,KAAK,CAACO,MAAd,CADgB,CADJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,SAAS,EAAC,mBAHd;AAII,IAAA,KAAK,EAAG,oBAAmBN,MAAO,EAJtC;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAC,mBAHd;AAII,IAAA,WAAW,EAAC,wBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CA/BJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAC,mBAHd;AAII,IAAA,WAAW,EAAC,uBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAzCJ,eAkDI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAlDJ,CALJ,CADJ,CADJ;AAiEH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n\n\nfunction NewDebit(props) {\n    const [amount, setAmount] = useState()\n    const [reason, setReason] = useState()\n    const [formData, setformData] = useState()\n    const [credit, setCredit] = useState([])\n\n    console.log(formData)\n\n    const offline = \"http://localhost:2000\"\n    //const online = \"https://accountnote.herokuapp.com\"\n\n\n    useEffect(() => {\n        if (formData) {\n            Axios.post(offline+\"/debit\", formData)\n                .then(res => {\n                    console.log(res.data)\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n\n            setTimeout(get, 1000)\n        }\n    },[formData])\n\n    useEffect(() => {\n        Axios.get(offline+\"/credit\")\n            .then(res => {\n                console.log(\"creditReason\",res.data)\n                setCredit(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    useEffect(() => {\n        if (reason) {\n            Axios.get(offline+\"/credit/amount\", { params: { reason: reason } })\n                .then(res => {\n                    setAmount(res.data.availableAmount)\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n\n    }, [reason])\n\n\n\n    const get = () => {\n        Axios.get(offline+\"/debit\")\n            .then(res => {\n                console.log(res.data)\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n\n    const initialValue = {\n        credit: \"\",\n        reason: \"\",\n        amount: \"\"\n    }\n    const submit = (values, props) => {        \n        setformData(values)\n        //props.resetForm()        \n\n    }\n    const validationSchema = yup.object({\n        // credit: yup.string().required(\"Plese Select Reason\"),\n        reason: yup.string().required(\"Reason Required\"),\n        amount: yup.string().required(\"Amount Required\")\n    })\n\n    \n\n\n\n    return (\n        <div className=\"mt-3\" id=\"newDebit\">\n            <Formik\n                initialValues={initialValue}\n                onSubmit={submit}\n                validationSchema={validationSchema}\n            >\n                <Form>\n                    <div>\n    <label>{props.credit}</label>\n                        {/* <Field\n                            as=\"select\"\n                            name=\"credit\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter Reason for Debit\"\n                            onClick={(e) => setReason(e.target.value)}\n                        //value={reason}                                                                               \n                        >\n                            <option value=\"\" amount=\"\">Select From</option>\n                            {\n                                credit.map((option, index) => (\n                                    <option key={index} value={option.reason} >{option.reason}</option>\n                                ))\n                            }\n                        </Field> */}\n                        {/* <ErrorMessage name=\"credit\" /> */}\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"text\"\n                            name=\"available\"\n                            className=\"form-control mt-2\"\n                            value={`available Amount ${amount}`}\n                            disabled\n                        />\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"text\"\n                            name=\"reason\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter Reason for Debit\"\n                        />\n                        <ErrorMessage name=\"reason\" />\n                    </div>\n\n                    <div>\n                        <Field\n                            type=\"number\"\n                            name=\"amount\"\n                            className=\"form-control mt-2\"\n                            placeholder=\"Enter amount to Debit\"\n                        />\n                        <ErrorMessage name=\"amount\" />\n                    </div>\n                    <div className=\"w3-center\">\n                        <button type=\"submit\" className=\"btn w3-red mt-2\" >Debit</button>\n                    </div>\n                </Form>\n\n            </Formik>\n        </div>\n    )\n}\n\nexport default NewDebit\n"]},"metadata":{},"sourceType":"module"}